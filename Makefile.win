
CORE_SRC=src/builtins.cpp src/context.cpp src/instruction.cpp src/object.cpp src/stack.cpp src/callstack.cpp src/exception.cpp
CORE_OBJ=$(CORE_SRC:.cpp=.obj)

CALC_SRC=src/slang.parser.c src/slang.lexer.c
CALC_OBJ=src/slang.parser.obj src/slang.lexer.obj

#CCFLAGS=/nologo /O2 /W4 /EHsc /Iinclude /Iwin32 /MT /c
#CPPDEFINES=/D_CRT_SECURE_NO_WARNINGS /D_CRT_SECURE_NO_DEPRECATE /DYYERROR_VERBOSE
#LINKFLAGS=/nologo /release

CCFLAGS=/nologo /Od /Zi /W4 /EHsc /Iinclude /Iwin32 /MTd /c
CPPDEFINES=/D_CRT_SECURE_NO_WARNINGS /D_CRT_SECURE_NO_DEPRECATE /DYYERROR_VERBOSE /D_DEBUG
LINKFLAGS=/nologo /debug


all: core slang

core: core.lib

slang: slang.exe

core.lib: $(CORE_OBJ)
	lib /nologo /out:core.lib $(CORE_OBJ)

slang.exe: $(CALC_OBJ) core.lib
	link $(LINKFLAGS) /out:slang.exe $(CALC_OBJ) core.lib

.c.obj:
	cl $(CCFLAGS) $(CPPDEFINES) /Fo$@ /Tp$<

.cpp.obj:
	cl $(CCFLAGS) $(CPPDEFINES) /c /Fo$@ /Tp$<

src/slang.lexer.c src/slang.lexer.h: src/slang.l
	flex -osrc/slang.lexer.c src/slang.l

src/slang.parser.h src/slang.parser.c src/slang.parser.output: src/slang.y
	bison -v -d -o src/slang.parser.c src/slang.y

src/builtins.obj: src/builtins.cpp include/builtins.h include/object.h include/stack.h include/context.h

src/context.obj: src/context.cpp include/context.h include/object.h

src/instruction.obj: src/instruction.cpp include/instruction.h include/stack.h include/object.h include/context.h include/exception.h

src/object.obj: src/object.cpp include/object.h include/instruction.h include/stack.h include/context.h

src/stack.obj: src/stack.cpp include/stack.h include/object.h

src/callstack.obj: src/callstack.cpp include/callstack.h

src/exception.obj: src/exception.cpp include/exception.h include/callstack.h

clean:
	del /Q src\*.obj
	del /Q src\*.lexer.*
	del /Q src\*.parser.*
	del /Q slang.exe
	del /Q core.lib
	del /Q *.pdb
	del /Q *.ilk


