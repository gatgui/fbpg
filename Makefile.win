
debug = 0
verbose = 0
memmgr = 1
symtbl = 1
symtblh = 1
ctxh = 0
ctxi = 0
# Should change the .y depending on symtbl

CORE_SRC=\
	src/builtins.cpp \
	src/context.cpp \
	src/instruction.cpp \
	src/object.cpp \
	src/stack.cpp \
	src/callstack.cpp \
	src/exception.cpp \
	src/heap.cpp \
	src/hashmap.cpp \
	src/symbol.cpp
CORE_OBJ=$(CORE_SRC:.cpp=.obj)

CALC_SRC=src/slang.parser.c src/slang.lexer.c src/parser.c
CALC_OBJ=src/slang.parser.obj src/slang.lexer.obj src/parser.obj

TESTHEAP_SRC=src/tests/heap.cpp
TESTHEAP_OBJ=src/tests/heap.obj

TESTHASH_SRC=src/tests/hash.cpp
TESTHASH_OBJ=src/tests/hash.obj


!IF $(debug) == 0
CCFLAGS=/nologo /O2 /W4 /EHsc /Iinclude /Iwin /MT /c /DYYERROR_VERBOSE /D_CRT_SECURE_NO_WARNINGS
LINKFLAGS=/nologo /release
!ELSE
CCFLAGS=/nologo /Od /Zi /W4 /EHsc /Iinclude /Iwin /MTd /c /DYYERROR_VERBOSE /D_CRT_SECURE_NO_WARNINGS /D_DEBUG
LINKFLAGS=/nologo /debug
!IF $(verbose) == 1
CCFLAGS=$(CCFLAGS) /D_DEBUG_VERBOSE
!ENDIF
!ENDIF

!IF $(memmgr) == 1
CCFLAGS=$(CCFLAGS) /D_MEMMGR
!ENDIF

!IF $(ctxh) == 1
CCFLAGS=$(CCFLAGS) /D_CTXH
!ENDIF

!IF $(ctxi) == 1
CCFLAGS=$(CCFLAGS) /D_CTXI
!ENDIF

!IF $(symtblh) == 1
CCFLAGS=$(CCFLAGS) /D_SYMTBLH
!ENDIF


all: core slang

core: core.lib

slang: slang.exe

testhash: testhash.exe

testheap: testheap.exe

core.lib: $(CORE_OBJ)
	lib /nologo /out:core.lib $(CORE_OBJ)

slang.exe: $(CALC_OBJ) core.lib
	link $(LINKFLAGS) /out:slang.exe $(CALC_OBJ) core.lib

testheap.exe: $(TESTHEAP_OBJ) core.lib
	link $(LINKFLAGS) /out:testheap.exe $(TESTHEAP_OBJ) core.lib

testhash.exe: $(TESTHASH_OBJ) core.lib
	link $(LINKFLAGS) /out:testhash.exe $(TESTHASH_OBJ) core.lib

.c.obj:
	cl $(CCFLAGS) /Fo$@ /Tp$<

.cpp.obj:
	cl $(CCFLAGS) /Fo$@ /Tp$<

#src/slang.lexer.c: src/slang.l
#	flex -osrc/slang.lexer.c src/slang.l
#
#src/slang.parser.c src/slang.parser.h: src/slang.y
#	bison -v -d -o src/slang.parser.c src/slang.y

# dependencies

src/builtins.obj: src/builtins.cpp include/builtins.h include/context.h \
	include/object.h include/heap.h include/callstack.h include/object.h \
	include/stack.h include/context.h include/instruction.h include/stack.h \
	include/symbol.h

src/callstack.obj: src/callstack.cpp include/callstack.h  include/symbol.h

src/context.obj: src/context.cpp include/context.h include/object.h \
	include/heap.h include/callstack.h include/symbol.h

src/exception.obj: src/exception.cpp include/exception.h \
	include/callstack.h

src/hashmap.obj: src/hashmap.cpp include/hashmap.h

src/heap.obj: src/heap.cpp include/heap.h

src/instruction.obj: src/instruction.cpp include/instruction.h \
	include/stack.h include/object.h include/heap.h include/context.h \
	include/callstack.h include/exception.h include/symbol.h

src/object.obj: src/object.cpp include/object.h include/heap.h \
	include/instruction.h include/stack.h include/object.h \
	include/context.h include/callstack.h include/symbol.h

src/slang.lexer.obj: src/slang.lexer.c include/context.h include/object.h \
	include/heap.h include/callstack.h include/stack.h include/object.h \
	include/instruction.h include/stack.h include/context.h \
	include/builtins.h include/callstack.h src/slang.parser.h include/symbol.h

src/slang.parser.obj: src/slang.parser.c include/context.h include/object.h \
	include/heap.h include/callstack.h include/stack.h include/object.h \
	include/instruction.h include/stack.h include/context.h \
	include/builtins.h include/callstack.h include/exception.h include/symbol.h

src/stack.obj: src/stack.cpp include/stack.h include/object.h \
	include/heap.h  include/symbol.h

src/symbol.obj: src/symbol.cpp include/symbol.h include/hashmap.h

#src/slang.lexer.o: src/slang.lexer.c src/slang.parser.h src/parser.h \
#	include/context.h include/object.h include/heap.h include/symbol.h \
#	include/hashmap.h include/callstack.h include/stack.h include/object.h \
#	include/instruction.h include/stack.h include/context.h \
#	include/builtins.h include/callstack.h include/exception.h
#
#src/slang.parser.o: src/slang.parser.c src/parser.h include/context.h \
#	include/object.h include/heap.h include/symbol.h include/hashmap.h \
#	include/callstack.h include/stack.h include/object.h \
#	include/instruction.h include/stack.h include/context.h \
#	include/builtins.h include/callstack.h include/exception.h

clean:
	del /Q src\*.obj
	del /Q src\tests\*.obj
#	del /Q src\*.lexer.*
#	del /Q src\*.parser.*
	del /Q slang.exe
	del /Q testhash.exe
	del /Q testheap.exe
	del /Q core.lib
	del /Q *.pdb
	del /Q *.ilk


